{"version":3,"sources":["blockchain/utils.ts","blockchain/constants.ts","contexts/Web3ModalProvider/Web3ModalProvider.tsx","blockchain/contracts/Contract.ts","blockchain/contracts/CoinStreamer.js","blockchain/contracts/Bep20Standard.js","blockchain/Web3Wrapper.ts","contexts/Web3WrapperProvider/Web3WrapperProvider.tsx","lib/navData.js","components/SideNav/Sidenav.js","utils/blockchain.ts","components/WalletConnect/index.tsx","pages/Submit.js","components/utils.ts","components/HistoryTable/CustomizedTable.js","pages/History.js","App.jsx","reportWebVitals.ts","index.tsx","components/SideNav/sidenav.module.css"],"names":["createWeb3","provider","realProvider","includes","Web3","providers","WebsocketProvider","HttpProvider","NumToBN","value","decimal","BigNumber","shiftedBy","rpcUrls","addresses","coinStreamer","Web3ModalContext","createContext","web3","connect","disconnect","account","chainId","networkId","connected","Web3ModalProvider","children","useState","web3Modal","setWeb3Modal","setWeb3","setAccount","setChainId","setNetworkId","setConnected","useEffect","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","network","_web3Modal","Web3Modal","cacheProvider","disableInjectedProvider","resetWeb3","useCallback","subscribeProvider","_provider","_web3","on","accounts","console","log","eth","net","getId","Number","getChainId","getAccounts","_account","_networkId","_chainId","cachedProvider","currentProvider","close","clearCachedProvider","Provider","Contract","tag","abi","address","events","contract","this","Date","now","method","params","Promise","resolve","reject","methods","call","from","then","catch","send","event","callback","onerr","err","res","returnValues","CoinStreamer","Bep20Standard","Web3Wrapper","wrapperOptions","bep20Standard","_recipent","_amount","_duration","_streams","amount","parseFloat","toString","parseInt","_tokenAddr","Web3WrapperContext","web3Wrapper","Web3WrapperProvider","useContext","setWeb3Wrapper","_web3Wrapper","e","navData","id","icon","text","link","Sidenav","open","setopen","location","useLocation","isMobile","useMediaQuery","query","className","styles","sidenav","sidenavClosed","Box","style","display","justifyContent","Typography","variant","color","textAlign","src","alt","sx","marginTop","menuBtn","onClick","leftSideBar","document","querySelector","contentContainer","classList","contains","remove","add","map","item","sideitem","pathname","split","activePageStatistics","to","linkText","ellipseAddress","width","slice","StyledMenu","styled","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","spacing","minWidth","palette","mode","grey","boxShadow","padding","fontSize","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","CustomizedMenus","React","anchorEl","setAnchorEl","Boolean","handleClose","handleConnectWallet","handleDisconnectWallet","Button","undefined","disableElevation","currentTarget","MenuListProps","onClose","MenuItem","disableRipple","Submit","firstName","useRef","lastName","emailAddr","city","state","zipCode","country","onSubmit","current","NotificationManager","error","db","Polybase","defaultNamespace","collectionReference","collection","create","success","margin","Container","component","maxWidth","mb","Paper","my","xs","md","p","align","fontStyle","marginBottom","Fragment","Grid","container","sm","TextField","required","name","label","autoComplete","inputRef","fullWidth","type","InputProps","readOnly","height","CustomTableCell","withStyles","head","border","body","TableCell","root","overflowX","table","row","classes","rows","data","Table","TableHead","TableRow","TableBody","scope","txHash","zip","payment","History","history","setHistory","getData","get","records","updateData","index","length","block","hash","firstname","lastname","email","temp","push","Providers","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f15cfa38.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nexport const createWeb3 = (provider) => {\r\n\r\n  var realProvider;\r\n\r\n  if (typeof provider === 'string') {\r\n    if (provider.includes('wss')) {\r\n      realProvider = new Web3.providers.WebsocketProvider(\r\n        provider\r\n      );\r\n    } else {\r\n      realProvider = new Web3.providers.HttpProvider(\r\n        provider\r\n      );\r\n    }\r\n  } else {\r\n    realProvider = provider;\r\n  }\r\n\r\n  return new Web3(realProvider);\r\n}\r\n\r\nexport const NumToBN = (value, decimal = 18) => {\r\n  return new BigNumber(value).shiftedBy(decimal);\r\n}\r\n","export const defaultChainId = 97;\r\n\r\nexport const rpcUrls = {\r\n  1337: 'http://localhost:8545',\r\n  56: 'https://bsc-dataseed1.binance.org',\r\n  97: 'https://data-seed-prebsc-1-s1.binance.org:8545',\r\n  1: 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161/',\r\n}\r\n\r\nexport const networkNames = {\r\n  // 1: 'Ethereum Mainnet',\r\n  1337: 'Localhost8545',\r\n  56: 'BSC Main Network',\r\n  97: 'BSC Test Network',\r\n  1: 'Ethereum Mainnet'\r\n}\r\n\r\nexport const addresses = {\r\n  coinStreamer: {\r\n    97: '0x7CAB7053ca06a485911CFC50Ff9D3818832D87c1'\r\n  }\r\n}\r\n\r\n\r\nexport const decimal = 8;","import { createContext, useCallback, useEffect, useState } from 'react';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3 from 'web3';\r\nimport { createWeb3 } from '../../blockchain/utils';\r\nimport { rpcUrls} from \"../../blockchain/constants\";\r\n\r\ninterface IWeb3ModalContext {\r\n  web3: Web3 | null;\r\n  connect: () => void;\r\n  disconnect: () => void;\r\n  account: string | null;\r\n  chainId: number | null;\r\n  networkId: number | null;\r\n  connected: boolean;\r\n}\r\n\r\nexport const Web3ModalContext = createContext<IWeb3ModalContext>({\r\n  web3: null,\r\n  connect: () => {},\r\n  disconnect: () => {},\r\n  account: null,\r\n  chainId: null,\r\n  networkId: null,\r\n  connected: false\r\n});\r\n\r\nconst Web3ModalProvider = ({ children }) => {\r\n\r\n  const [web3Modal, setWeb3Modal] = useState<Web3Modal | null>(null);\r\n  const [web3, setWeb3] = useState<Web3 | null>(null);\r\n  const [account, setAccount] = useState<string | null>(null);\r\n  const [chainId, setChainId] = useState<number | null>(null);\r\n  const [networkId, setNetworkId] = useState<number | null>(null);\r\n  const [connected, setConnected] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const providerOptions = {\r\n\r\n      walletconnect: {\r\n        package: WalletConnectProvider,\r\n        options: {\r\n          rpc: {\r\n            1: rpcUrls[1],\r\n            56: rpcUrls[56],\r\n            97: rpcUrls[97],\r\n            1337: rpcUrls[1337],\r\n          },\r\n          network: 'binance',\r\n        }\r\n      }\r\n    };\r\n  \r\n    const _web3Modal = new Web3Modal({\r\n      cacheProvider: true, // optional\r\n      providerOptions, // required\r\n      disableInjectedProvider: false, // optional. For MetaMask / Brave / Opera.\r\n    });\r\n  \r\n    setWeb3Modal(_web3Modal);\r\n  }, [])\r\n\r\n  const resetWeb3 = useCallback(() => {\r\n    setWeb3(null);\r\n    setAccount(null);\r\n    setChainId(null);\r\n    setNetworkId(null);\r\n    setConnected(false);\r\n  }, [])\r\n\r\n  const subscribeProvider = useCallback(async (_provider: any, _web3: Web3) => {\r\n    if (!_provider.on)\r\n      return;\r\n\r\n    _provider.on(\"close\", () => {\r\n      resetWeb3();\r\n    });\r\n    _provider.on(\"accountsChanged\", async (accounts: string[]) => {\r\n      setAccount(accounts[0]);\r\n    });\r\n    _provider.on(\"chainChanged\", async (chainId: number) => {\r\n      console.log(\"Chain changed: \", chainId);\r\n      const networkId = await _web3.eth.net.getId();\r\n      setChainId(Number(chainId));\r\n      setNetworkId(Number(networkId));\r\n    });\r\n\r\n    _provider.on(\"networkChanged\", async (networkId: number) => {\r\n      const chainId = await _web3.eth.getChainId();\r\n      setChainId(Number(chainId));\r\n      setNetworkId(Number(networkId));\r\n    });\r\n  }, [resetWeb3])\r\n\r\n  const connect = useCallback(async () => {\r\n    if (!web3Modal)\r\n      return;\r\n\r\n    const _provider = await web3Modal.connect();\r\n    if (_provider === null) \r\n      return;\r\n    \r\n    const _web3 = createWeb3(_provider);\r\n    setWeb3(_web3);\r\n\r\n    await subscribeProvider(_provider, _web3);\r\n    \r\n    const accounts = await _web3.eth.getAccounts();\r\n    const _account = accounts[0];\r\n    const _networkId = await _web3.eth.net.getId();\r\n    const _chainId = await _web3.eth.getChainId();\r\n\r\n    // console.log(_account);\r\n    // console.log(typeof _account);\r\n\r\n    setAccount(_account);\r\n    setNetworkId(_networkId);\r\n    setChainId(_chainId);\r\n    setConnected(true);\r\n    \r\n  }, [web3Modal, subscribeProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal && web3Modal.cachedProvider) {\r\n      connect();\r\n    }\r\n  }, [web3Modal, connect])\r\n\r\n  const disconnect = useCallback(async () => {\r\n    if (web3 && web3.currentProvider) {\r\n      const _provider: any = web3.currentProvider;\r\n      if (_provider.close)\r\n        await _provider.close();\r\n    }\r\n    if (web3Modal) {\r\n      await web3Modal.clearCachedProvider();\r\n    }\r\n    resetWeb3();\r\n  }, [web3Modal, web3, resetWeb3])\r\n\r\n  // console.log(\"chainId = \", chainId);\r\n\r\n  return (\r\n    <Web3ModalContext.Provider \r\n      value={{ \r\n        web3, \r\n        connect,\r\n        disconnect,\r\n        account,\r\n        networkId,\r\n        chainId,\r\n        connected\r\n      }}>\r\n      {children}\r\n    </Web3ModalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Web3ModalProvider;","import Web3 from \"web3\";\r\nimport { AbiItem } from 'web3-utils';\r\nimport { Contract as Web3Contract } from \"web3-eth-contract\";\r\n\r\nclass Contract {\r\n  web3: Web3;\r\n  chainId: number;\r\n  account: string | null;\r\n  tag: string | null;\r\n  events: object;\r\n  contract: Web3Contract;\r\n\r\n  constructor(options, tag: string, abi, address: string) {\r\n    this.web3 = options.web3;\r\n    this.chainId = options.chainId;\r\n    this.account = options.account;\r\n\r\n    this.contract = new this.web3.eth.Contract(abi as AbiItem[], address);\r\n\r\n    if (tag) this.tag = tag;\r\n    else this.tag = \"contract-\" + Date.now();\r\n\r\n    this.events = {};\r\n  }\r\n  \r\n  call(method, ...params) {\r\n    return new Promise((resolve, reject) => {\r\n      this.contract.methods[method](...params).call({from: this.account})\r\n        .then(resolve)\r\n        .catch(reject)\r\n    });\r\n  }\r\n\r\n  send(method, options, ...params) {\r\n    return new Promise((resolve, reject) => {\r\n      this.contract.methods[method](...params).send({...options, from: this.account})\r\n        .then(resolve)\r\n        .catch(reject)\r\n    });\r\n  }\r\n\r\n  on(event, callback, onerr) {\r\n    if (this.events[event])\r\n      return;\r\n    this.contract.events[event]((err, res) => {\r\n      if (err === null) {\r\n        callback(res.returnValues, this.tag);\r\n      } else {\r\n        if (onerr) onerr(err);\r\n        else console.log(err);\r\n      }\r\n    });\r\n    this.events[event] = true;\r\n  }\r\n\r\n  // getPastEvents(...params) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     this.contract.getPastEvents(...params)\r\n  //       .then(resolve)\r\n  //       .catch(reject)\r\n  //   });\r\n  // }\r\n}\r\n\r\nexport default Contract;","import Contract from './Contract';\r\nimport abi from '../abi/coinstreamer.json';\r\n\r\nclass CoinStreamer extends Contract {\r\n    constructor(options, address) {\r\n        super(options, \"CoinStreamer\", abi, address);\r\n    }\r\n}\r\n\r\nexport default CoinStreamer;","import Contract from './Contract';\r\nimport abi from '../abi/bep20abi.json';\r\n\r\nclass Bep20Standard extends Contract {\r\n    constructor(options, address) {\r\n        super(options, \"Bep20Standard\", abi, address);\r\n    }\r\n}\r\n\r\nexport default Bep20Standard;","import Web3 from 'web3';\r\nimport { addresses } from './constants';\r\nimport CoinStreamer from \"./contracts/CoinStreamer\";\r\nimport Bep20Standard from \"./contracts/Bep20Standard\";\r\nimport { NumToBN } from './utils';\r\n\r\nexport default class Web3Wrapper {\r\n\r\n  web3: Web3;\r\n  chainId: number;\r\n  account: string;\r\n  wrapperOptions: any;\r\n\r\n  // Contracts\r\n  coinStreamer: CoinStreamer;\r\n  bep20Standard: Bep20Standard;\r\n\r\n  constructor(web3, chainId, account, options = {}) {\r\n    this.web3 = web3;\r\n    this.chainId = chainId;\r\n    this.account = account;\r\n\r\n    this.wrapperOptions = {\r\n      web3, chainId, account,\r\n      ...options\r\n    }\r\n    this.coinStreamer = new CoinStreamer(this.wrapperOptions, addresses.coinStreamer[this.chainId]);\r\n    this.bep20Standard = new Bep20Standard(this.wrapperOptions, \"\");\r\n  }\r\n\r\n  async sendBNB(_recipent, _amount, _duration, _streams) {\r\n    let amount = NumToBN(parseFloat(_amount));\r\n    await this.coinStreamer.send(\"getBNB\", {value:amount.toString()}, _recipent, amount.toString(), _duration, parseInt(_streams));\r\n  }\r\n\r\n  async sendToken(_recipent, _tokenAddr, _amount, _duration, _streams) {\r\n    this.bep20Standard = new Bep20Standard(this.wrapperOptions, _tokenAddr);\r\n    let amount = NumToBN(parseFloat(_amount));\r\n    await this.bep20Standard.send(\"approve\", {}, addresses.coinStreamer[this.chainId], amount.toString());\r\n    await this.coinStreamer.send(\"getToken\", {}, _recipent, _tokenAddr, amount.toString(), _duration, parseInt(_streams));\r\n  }\r\n}\r\n","import React, { createContext, useEffect, useState, useContext } from 'react';\r\nimport Web3Wrapper from 'blockchain/Web3Wrapper';\r\nimport { Web3ModalContext } from '../Web3ModalProvider';\r\n\r\ninterface IWeb3WrapperContext {\r\n  web3Wrapper: Web3Wrapper | null;\r\n}\r\n\r\nexport const Web3WrapperContext = createContext<IWeb3WrapperContext>({\r\n  web3Wrapper: null\r\n});\r\n\r\nconst Web3WrapperProvider = ({ children }) => {\r\n\r\n  const { web3, chainId, account } = useContext(Web3ModalContext);\r\n  const [web3Wrapper, setWeb3Wrapper] = useState<Web3Wrapper | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (web3 && chainId && account) {\r\n      try {\r\n        const _web3Wrapper = new Web3Wrapper(web3, chainId, account);\r\n        setWeb3Wrapper(_web3Wrapper);\r\n      }\r\n      catch(e) {\r\n        console.log(\"Failed to create a Web3 Wrapper: \", e);\r\n      }\r\n    }\r\n    else {\r\n      setWeb3Wrapper(null);\r\n    }\r\n  }, [web3, chainId, account]);\r\n\r\n  return (\r\n    <Web3WrapperContext.Provider \r\n      value={{web3Wrapper}}>\r\n      {children}\r\n    </Web3WrapperContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Web3WrapperProvider;","import BackupIcon from '@mui/icons-material/Backup';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\nexport const navData = [\r\n    {\r\n        id: 0,\r\n        icon: <BackupIcon/>,\r\n        text: \"Submit Profile\",\r\n        link: \"\"\r\n    },\r\n    {\r\n        id: 1,\r\n        icon: <HistoryIcon/>,\r\n        text: \"Submissions\",\r\n        link: \"history\"\r\n    }\r\n]","import styles from \"./sidenav.module.css\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport KeyboardDoubleArrowLeftIcon from \"@mui/icons-material/KeyboardDoubleArrowLeft\";\r\nimport { navData } from \"../../lib/navData\";\r\nimport { useState } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nexport default function Sidenav() {\r\n  const [open, setopen] = useState(true);\r\n  const location = useLocation();\r\n  const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n\r\n  const toggleSideBar = () => {\r\n    const leftSideBar = document.querySelector(\".left-side-bar\");\r\n    const contentContainer = document.querySelector(\".content-container\");\r\n\r\n    setopen(!open);\r\n    if (leftSideBar.classList.contains(\"left-side-bar-collapsed\")) {\r\n      leftSideBar.classList.remove(\"left-side-bar-collapsed\");\r\n      contentContainer.classList.remove(\r\n        \"content-container-with-collapsed-sidebvar\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    leftSideBar.classList.add(\"left-side-bar-collapsed\");\r\n    contentContainer.classList.add(\"content-container-with-collapsed-sidebvar\");\r\n  };\r\n\r\n  return (\r\n    <div className={open ? styles.sidenav : styles.sidenavClosed}>\r\n      {open&!isMobile ? (\r\n        <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            P o l y b a s e\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <img src=\"https://img.icons8.com/stickers/50/null/p--v1.png\" alt=\"Shortcut\"/>\r\n        </Box>\r\n      )}\r\n      {!isMobile?(\r\n        <button className={styles.menuBtn} onClick={toggleSideBar}>\r\n          {open ? (\r\n            <KeyboardDoubleArrowLeftIcon />\r\n          ) : (\r\n            <KeyboardDoubleArrowRightIcon />\r\n          )}\r\n        </button>\r\n      ):(\r\n        <Box sx={{marginTop:\"20px\"}}>\r\n        </Box>\r\n      )\r\n      }\r\n      {navData.map((item) => {\r\n        return (\r\n          <NavLink\r\n            key={item.id}\r\n            className={`${styles.sideitem} ${\r\n              location.pathname.split(\"/\")[1] === item.link\r\n                ? styles.activePageStatistics\r\n                : \"\"\r\n            }`}\r\n            to={item.link}\r\n          >\r\n            {item.icon}\r\n            {!isMobile?(\r\n              <span  className={`${styles.linkText} left-side-bar-menu-link-text`}>{item.text}</span>\r\n            ):(<></>)}\r\n            \r\n          </NavLink>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport function ellipseAddress(\r\n    address: string = \"\",\r\n    width: number = 4\r\n  ): string {\r\n    return `${address.slice(0, width + 2)}...${address.slice(-width)}`;\r\n  }\r\n\r\nexport const NumToBN = (value, decimal = 8) => {\r\n  return new BigNumber(value).shiftedBy(decimal);\r\n}","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport { useContext, useCallback } from \"react\";\r\nimport { ellipseAddress } from \"utils/blockchain\";\r\nimport { Web3ModalContext } from \"contexts/Web3ModalProvider\";\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedMenus() {\r\n  const { connect, disconnect, account } = useContext(Web3ModalContext);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleConnectWallet = useCallback(() => {\r\n    connect();\r\n  }, [connect]);\r\n\r\n  const handleDisconnectWallet = useCallback(() => {\r\n    disconnect();\r\n    handleClose();\r\n  }, [disconnect]);\r\n\r\n  return (\r\n    <div>\r\n      {!account ? (\r\n        <Button\r\n          id=\"demo-customized-button\"\r\n          aria-controls={open ? 'demo-customized-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={handleConnectWallet}\r\n        >\r\n          CONNECT WALLET\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            id=\"demo-customized-button\"\r\n            aria-controls={open ? 'demo-customized-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={handleClick}\r\n          >\r\n            {ellipseAddress(account)}\r\n          </Button>\r\n          <StyledMenu\r\n            id=\"demo-customized-menu\"\r\n            MenuListProps={{\r\n              'aria-labelledby': 'demo-customized-button',\r\n            }}\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleDisconnectWallet} disableRipple>\r\n              DISCONNECT\r\n            </MenuItem>\r\n          </StyledMenu>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useContext } from 'react'\r\nimport { Box, Typography, TextField, Button, Grid, Container, Paper } from \"@mui/material\";\r\nimport WalletConnect from \"../components/WalletConnect\";\r\nimport { Web3ModalContext } from 'contexts/Web3ModalProvider';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Polybase } from '@polybase/client'\r\n\r\nexport default function Submit() {\r\n  const { account } = useContext(Web3ModalContext);\r\n  const firstName = useRef();\r\n  const lastName = useRef();\r\n  const emailAddr = useRef();\r\n  const address = useRef();\r\n  const city = useRef();\r\n  const state = useRef();\r\n  const zipCode = useRef();\r\n  const country = useRef();\r\n\r\n  const onSubmit = async () => {\r\n    if(!firstName.current.value || !lastName.current.value || !emailAddr.current.value || !address.current.value || !city.current.value || !state.current.value || !zipCode.current.value || !country.current.value)\r\n      NotificationManager.error('Please fill out all requirements', 'Invalid Input')\r\n    else{\r\n      const db = new Polybase({ defaultNamespace: \"submit_test\" })\r\n      const collectionReference = db.collection(\"Submissions\")\r\n      console.log(collectionReference);\r\n      await collectionReference.create([account, firstName.current.value, lastName.current.value, emailAddr.current.value, address.current.value, city.current.value, state.current.value, zipCode.current.value, country.current.value, account]);\r\n      NotificationManager.success('Successfully submitted', 'Success')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box sx={{margin:'10px'}}>\r\n      <Box sx={{display:'block', width:'100%', justifyContent:\"end\", textAlign:'end', marginTop:\"30px\"}}>\r\n        <WalletConnect/>\r\n      </Box>\r\n\r\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\r\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 }, backgroundColor:'#334155', borderRadius:'1rem' }}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" fontStyle={{color:'white'}} sx={{marginBottom:'25px'}}>\r\n            Submit Form\r\n          </Typography>\r\n          {!account?(\r\n            <Typography align=\"center\" fontStyle={{color:'#94a3b8'}} sx={{marginBottom:'15px'}}>\r\n              Please Connect Wallet\r\n            </Typography>\r\n          ):(\r\n            <React.Fragment>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"firstName\"\r\n                    className='textfield'\r\n                    name=\"firstName\"\r\n                    label=\"First name\"\r\n                    autoComplete=\"given-name\"\r\n                    inputRef={firstName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"lastName\"\r\n                    className='textfield'\r\n                    name=\"lastName\"\r\n                    label=\"Last name\"\r\n                    inputRef={lastName}\r\n                    fullWidth\r\n                    autoComplete=\"family-name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"email\"\r\n                    className='textfield'\r\n                    name=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    inputRef={emailAddr}\r\n                    fullWidth\r\n                    autoComplete=\"shipping email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"address1\"\r\n                    className='textfield'\r\n                    name=\"address1\"\r\n                    label=\"Address line 1\"\r\n                    inputRef={address}\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-line1\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"city\"\r\n                    name=\"city\"\r\n                    className='textfield'\r\n                    label=\"City\"\r\n                    inputRef={city}\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-level2\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    id=\"state\"\r\n                    name=\"state\"\r\n                    className='textfield'\r\n                    label=\"State/Province/Region\"\r\n                    inputRef={state}\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"zip\"\r\n                    name=\"zip\"\r\n                    className='textfield'\r\n                    label=\"Zip / Postal code\"\r\n                    inputRef={zipCode}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    id=\"country\"\r\n                    name=\"country\"\r\n                    className='textfield'\r\n                    label=\"Country\"\r\n                    inputRef={country}\r\n                    fullWidth\r\n                    autoComplete=\"shipping country\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"wallet\"\r\n                    className='textfieldwallet'\r\n                    name=\"wallet\"\r\n                    color='success'\r\n                    label=\"Payment Address\"\r\n                    value={account}\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-line2\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sx={{textAlign:'center'}}>\r\n                  <Button onClick={onSubmit} sx={{backgroundColor:'#3b82f6', color:'white', borderRadius:'1rem', width:'100%', height:'60px'}}>Submit</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","export function ellipseAddress(address) {\r\n    if (!address) return \"\";\r\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ellipseAddress } from '../utils';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: \"#1e293b\",\r\n    color: \"#94a3b8\",\r\n    border: 'none'\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    color: 'white',\r\n    border: 'none'\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: \"#141c2e\",\r\n      color: 'white'\r\n    },\r\n    '&:nth-of-type(even)': {\r\n        backgroundColor: \"#1d2536\",\r\n        color: 'white'\r\n      }\r\n  },\r\n});\r\n\r\nfunction CustomizedTable(props) {\r\n  const { classes } = props;\r\n  const rows = props.data;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Tx Hash</CustomTableCell>\r\n            <CustomTableCell align=\"right\">First Name</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Last Name</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Email Address</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Address</CustomTableCell>\r\n            <CustomTableCell align=\"right\">City</CustomTableCell>\r\n            <CustomTableCell align=\"right\">State</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Zip/Postal Code</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Country</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Payment Address</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow className={classes.row} key={row.txHash}>\r\n              <CustomTableCell component=\"th\" scope=\"row\">\r\n                {ellipseAddress(row.txHash)}\r\n              </CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.firstName}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.lastName}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.emailAddr}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.address}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.city}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.state}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.zip}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{row.country}</CustomTableCell>\r\n              <CustomTableCell align=\"right\">{ellipseAddress(row.payment)}</CustomTableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);","import React, { useState, useEffect } from 'react'\r\nimport { Box, Container } from \"@mui/material\";\r\nimport WalletConnect from \"../components/WalletConnect\";\r\nimport { Polybase } from '@polybase/client';\r\nimport HistoryTable from \"../components/HistoryTable/CustomizedTable\";\r\nimport './style.scss'\r\n\r\nexport default function History() {\r\n\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const createData = (txHash, firstName, lastName, emailAddr, address, city, state, zip, country, payment) => {\r\n    return { txHash, firstName, lastName, emailAddr, address, city, state, zip, country, payment };\r\n  }\r\n\r\n  const getData = async() => {\r\n    const db = new Polybase({ defaultNamespace: \"submit_test\" })\r\n    const collectionReference = db.collection(\"Submissions\")\r\n    const records = await collectionReference.get()\r\n    const updateData = [];\r\n\r\n    for(let index = 0; index < records[\"data\"].length; index++) {\r\n      let temp = createData(\r\n        records[\"data\"][index].block.hash, \r\n        records[\"data\"][index].data.firstname,\r\n        records[\"data\"][index].data.lastname,\r\n        records[\"data\"][index].data.email,\r\n        records[\"data\"][index].data.address,\r\n        records[\"data\"][index].data.city,\r\n        records[\"data\"][index].data.state,\r\n        records[\"data\"][index].data.zip,\r\n        records[\"data\"][index].data.country,\r\n        records[\"data\"][index].data.payment,\r\n      );\r\n      updateData.push(temp);\r\n    }\r\n    setHistory(updateData);\r\n  }\r\n\r\n  return (\r\n      <Box sx={{margin:'10px'}}>\r\n        <Box sx={{display:'block', width:'100%', justifyContent:\"end\", textAlign:'end', marginTop:\"30px\"}}>\r\n          <WalletConnect/>\r\n        </Box>\r\n        <Container sx={{marginTop:'100px'}}>\r\n          <HistoryTable data={history}/>\r\n        </Container>\r\n      </Box>\r\n    )\r\n}\r\n","import \"./App.scss\";\nimport 'react-notifications/lib/notifications.css';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Web3ModalProvider from \"./contexts/Web3ModalProvider\"; \nimport Web3WrapperProvider from \"contexts/Web3WrapperProvider\";\nimport Sidenav from './components/SideNav/Sidenav';\nimport Submit from \"./pages/Submit\";\nimport History from \"./pages/History\";\nimport { Grid } from \"@material-ui/core\";\n\nimport { NotificationContainer } from 'react-notifications';\n\nconst App = () => (\n  <Providers>\n  <BrowserRouter>\n        <Grid container className=\"layout-container\" style={{display:'flex', justifyContent:'flex-end'}}>\n          <Grid item xs={2} sm={2} className='left-side-bar'>\n            <Sidenav />\n          </Grid>\n          <Grid item className=\"content-container\" xs={10} sm={10} style={{ width: '100%', justifyContent: 'center' }}>\n              <Switch>\n                <Route exact path=\"/\" component={Submit}/>\n                <Route path=\"/history\" component={History}/>\n              </Switch>\n          </Grid>\n        </Grid>\n    </BrowserRouter>\n    <NotificationContainer />\n  </Providers>\n)\n\nconst Providers = (props) => {\n  return (\n    <Web3ModalProvider>\n      <Web3WrapperProvider>\n        {props.children}\n      </Web3WrapperProvider>\n    </Web3ModalProvider>\n  )\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"sidenav_sidenav__3L5Ct\",\"sidenavClosed\":\"sidenav_sidenavClosed__-1zBK sidenav_sidenav__3L5Ct\",\"sideitem\":\"sidenav_sideitem__3Tmwi\",\"activePageStatistics\":\"sidenav_activePageStatistics__2JmfP\",\"linkText\":\"sidenav_linkText__f2VGo\",\"menuBtn\":\"sidenav_menuBtn__15K8G\"};"],"sourceRoot":""}